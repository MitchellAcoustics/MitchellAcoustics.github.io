{
  "hash": "7b679dfc5a089ddddaa7cb39af2ca106",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SEM Analysis\"\ndraft: false\ndescription: \"Analysis of the SATP data using SEM\"\ncategories: \n  - preprint\n  - analysis\nauthor:\n  - name: Francesco Aletta\n    email: f.aletta@ucl.ac.uk\n    affiliations: \n        - id: ucl-iede\n          name: University College London\n          department: Institute for Environmental Design and Engineering\n          address: Central House, 14 Upper Woburn Place\n          city: London\n          state: UK\n          postal-code: WC1H 0NN\n    attributes:\n        corresponding: true\n    orcid: 0000-0003-0351-3189\n  - name: Andrew Mitchell\n    email: andrew.mitchell.18@ucl.ac.uk\n    affiliations:\n      - ref: ucl-iede\n    orcid: 0000-0003-0978-5046\n\ndate: last-modified\nformat:\n  html:\n    toc: true\n    code-fold: true\n  elsevier-pdf:\n    output-file: 'manuscript.pdf'\n    hyperrefoptions: \n      - \"citecolor=black\"\n    echo: false\n    journal:\n      name: Applied Acoustics\n      formatting: preprint\n      model: 3p\n      cite-style: authoryear\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # For data manipulation\nlibrary(dplyr )     # For data manipulation\nlibrary(ggplot2)    # For data visualization\nlibrary(CircE)      # For circumplex SEM statistics\nlibrary(here)       # For file paths\n\nsource(here(project_dir, \"sem_funcs.R\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RCurl)      # For downloading data from Zenodo\nlibrary(readxl)     # For reading Excel files\n\ntemp.file <- paste0(tempfile(), \".xlsx\")\ndownload.file(\n    \"https://zenodo.org/records/10159673/files/SATP%20Dataset%20v1.4.xlsx\",\n    temp.file,\n    mode=\"wb\")\nsatp <- read_excel(temp.file,\n    na = c(\"\", \"N/A\"),\n    col_types = c(\n        \"text\", \"text\", \"text\", # Lan, Rec, Part\n        \"numeric\", # Age\n        \"text\", # Gender\n        \"numeric\", \"numeric\", \"numeric\", \"numeric\", \n        \"numeric\", \"numeric\", \"numeric\", \"numeric\", # PAQs\n        \"numeric\", # loud\n        \"text\", # Inst\n        \"numeric\" # sequence\n    )\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prep variables for the circumplex analysis\nscales <- c(\"PAQ1\", \"PAQ2\", \"PAQ3\", \"PAQ4\",\n            \"PAQ5\", \"PAQ6\", \"PAQ7\", \"PAQ8\"\n            ) # Names of the scales for circumplex analysis\n# Ideal angles for circumplex analysis\neq.angles <- c(0, 45, 90, 135, 180, 225, 270, 315) \n\n# Ipsatize the data\n# For each participant, we subtract the mean of their response to all scales\n# across all recordings from their response to each scale for each recording\n# This is done at the suggestion of JM Girard/R Circumplex\n\nsatp |> \n  group_by(Participant) |>\n  mutate(Mean = mean(c_across(all_of(scales)), na.rm = TRUE)) -> parts_means\n\nsatp[scales] <- satp |>\n                    select(all_of(scales)) |>\n                    mutate(across(all_of(scales), ~ .x - parts_means$Mean))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the acoustic analysis data\nlvls <- read_excel(here(project_dir, \"LLAN.xlsx\"),\n                    skip = 1,\n                    na = c(\"\", \"N/A\"),\n                    col_types = c(\"text\", \"text\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"),\n                    col_names = c(\"Recording\", \"Channel\", \"Leq\", \"LAeq\", \"N\", \"LA90\")\n              )\n\n\n# Extract the max for each recording to reduce from two channels to one\nresult <- lvls |>\n  group_by(Recording) |>\n  mutate(max_N = ifelse(row_number() == 1, max(N), NA_integer_)) |>\n  select(Recording, max_N) |>\n  na.omit()\n\n# Join to SATP dataset\nsatp <- left_join(satp, result, by=join_by(Recording == Recording))\n```\n:::\n\n\n\n\n## Step One: Confirmatory Factor Analysis\n\nRun all four models for a language and compile into a single table:\n\n### Fit Indices\n\n| **Fit Index**                                     | **Threshold** |\n| :------------------------------------------------ | :-----------: |\n| Chi-squared ($\\chi^2$)                            | *p < 0.05*    |\n| Comparative Fit Index (CFI)                       | *0.90*        |\n| Goodness of Fit Index (GFI)                       | *0.90*        |\n| Standardized Root Mean Square Residual  (SRMR)    | *0.08*        |\n| Root Mean Squared Error of  Approximation (RMSEA) | *0.13*        |\n| Minimum Common Score Correlations  (MCSC)         | *-0.8*        |\n| Gap difference test (GDIFF)                       | *20*          |\n\nFit indices and thresholds, including the reference from which the threshold is derived. {#tbl-indices}\n\n\nEach model is assessed against a suite of SEM fit indices, summarised in @tbl-indices. These indices include the $\\chi^2$ test, Comparative Fit Index (CFI), Goodness of Fit Index (GFI), Standardized Root Mean Square Residual (SRMR), and Root Mean Squared Error of Approximation (RMSEA). Two additional indices are calculated which are not considered 'typical' fit indices for SEMs, but which have proved to be crucial for the analysis of the circumplex. The first is the Minimum Common Score Correlations (MCSC). The second is the Gap Difference test (GDIFF), which cont. The thresholds for each index are derived from the literature, and are summarised in @tbl-indices.\n\n### Run Step one\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run the models for English\nsatp_eng <- satp[satp$Language == \"eng\", ]\ncirce_satp_eng <- run_all_models(satp_eng, \"SATP\", \"eng\", m=3)\n\n# languages <- unique(satp$Language) # Get a list of all the languages\n\n# full_table <- circe_satp_eng$res_table # Start with the English results\n# for (lang in languages) {\n#     if (lang == \"eng\" | lang == \"zsm\") { # TODO: add try catch block\n#         next # Skip English, we've already done it\n#     }\n#     print(\"=====================================\")\n#     print(lang)\n#     print(\"=====================================\")\n#     lang_data <- satp[satp$Language == lang, ] # Filter to just the language we want\n#     lang_res <- run_all_models(lang_data, \"SATP\", lang, m=3) # Run the models\n#     full_table <- rbind(full_table, lang_res$res_table) # Add the results to the table\n# }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# knitr::kable(full_table)\n```\n:::\n",
    "supporting": [
      "satp-main_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}